---
# See, now this just makes me upset. I have to put in this dirty workaround because
# there is a circular dependency on a frikkin perl module
# (need cpanm for Test::more, which needs cpanm to install)
- block:
    - name: prepare things for Debian
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - software-properties-common
        - python-software-properties
    - name: Add the Java ppa
      apt_repository:
        repo: 'ppa:openjdk-r/ppa'
        codename: "{{ansible_distribution_release}}"
        state: present
  rescue:
    - debug:
        msg: "Ah, fuckit"
  when: ansible_os_family == "Debian"

- name: Install prerequisites
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ prerequisites[ansible_os_family] }}"

- name: correct java version selected
  alternatives:
    name: java
    path: "{{ java8_path[ansible_os_family][ansible_distribution_major_version]}}"
  when: (ansible_distribution_major_version == '6' or ansible_os_family == 'Debian')

- name: Install Required Groups (RedHat)
  yum:
    name: "{{ item }}"
    state: present
  when: ansible_os_family == 'RedHat'
  with_items:
    - '@X Software Development'
    - '@Development tools'

- block:
    - name: Ensure that cpanm is available
      uri:
        url: https://cpanmin.us/
        dest: /bin/cpanm
        creates: /bin/cpanm
        validate_certs: no
    - name: Ensure executable
      file:
        path: /bin/cpanm
        mode: "u+rwx"
  rescue:
    - debug:
        msg: "Ah, fuckit"
  when: ansible_os_family == "RedHat"


- name: Ensure Testing packages are installed
  cpanm:
    name: Test::More

- name: Ensure Build Dir
  file:
    path: "{{ openssh_build_dir }}"
    force: no
    owner: root
    group: root
    unsafe_writes: no
    state: directory
    mode: "u+rwx"

- name: Get OpenSSH
  unarchive:
    src: "{{ openssh_url }}/openssh-{{ openssh_version }}.tar.gz"
    dest: /root/openssh
    group: root
    remote_src: yes
    list_files: no
    keep_newer: no
    unsafe_writes: no
    owner: root
    validate_certs: yes

- name: Configure OpenSSH
  command: "{{ openssh_build_dir }}/openssh-{{ openssh_version }}/configure --prefix={{ openssh_install_dir }}"
  args:
    warn: no
    creates: Makefile
    chdir: "{{ openssh_build_dir }}/openssh-{{ openssh_version }}"

- name: Install OpenSSH
  command: make install
  args:
    warn: no
    # creates: "{{ openssh_install_dir }}/{{ item }}"
    chdir: "{{ openssh_build_dir }}/openssh-{{ openssh_version }}"
    # loop: "{{ openssh_files }}"
