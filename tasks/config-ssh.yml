---
- name: add keys to the authorized keys
  authorized_key:
    user: root
    key: "https://github.com/{{ item }}.keys"
    validate_certs: False
  loop: "{{ user_keys }}"

- name: add keys to the authorized keys
  authorized_key:
    user: jenkins
    key: "https://github.com/{{ item }}.keys"
    validate_certs: False
  loop: "{{ user_keys }}"


# Create the host keys for each host separately and add them to the repo.
# This is a manual step which you need to run for your own use of this
# role.
- name: Push host ssh private keys
  copy:
    src: "etc/ssh/ssh_host_{{ item }}_key"
    dest: "/etc/ssh/ssh_host_{{ item }}_key"
    owner: root
    group: root
    decrypt: yes
    mode: 'u+r'
  loop: "{{ ssh_key_types }}"
# validate : restart ssh

- name: Push host ssh public keys
  copy:
    src: "etc/ssh/ssh_host_{{ item }}_key.pub"
    dest: "/etc/ssh/ssh_host_{{ item }}_key.pub"
    owner: root
    group: root
    # decrypt: yes
  loop: "{{ ssh_key_types }}"

- name: ensure run dir present
  file:
    dest: /var/run/sshd
    state: directory
    owner: root

- name: Replace the pam login
  lineinfile:
    dest: /etc/pam.d/sshd
    line: "session    optional     pam_loginuid.so"
    regexp: '^session\s*optional\s*pam_loginuid\.so$'
    state: present

- name: Template SSHD config
  template:
    dest: /etc/ssh/sshd_config
    src: etc/ssh/sshd_config.j2
    owner: root
    group: root # not required. Name of the group that should own the file/directory, as would be fed to I(chown).
    unsafe_writes: no # not required. Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this. One example are docker mounted files, they cannot be updated atomically and can only be done in an unsafe manner.,This boolean option allows ansible to fall back to unsafe methods of updating files for those cases in which you do not have any other choice. Be aware that this is subject to race conditions and can lead to data corruption.
    validate: "sshd -T -f %s"
    mode: 'u=rw'
    backup: yes
