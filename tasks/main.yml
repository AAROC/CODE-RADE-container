---
- name: Add ubuntu build slaves to group
  add_host:
    name: "{{ item }}"
    groups: ubuntu-slaves
  with_items:
    - ubuntu1404
    - ubuntu1610
- name: Add CentOS slaves to group
  add_host:
    name: "{{ item }}"
    groups: centos-slaves
  with_items:
    - centos6
    - centos7
#
# - name: Install Python (Ubuntu)
#   raw: which apt-get || which python || apt-get -y update && apt-get install -y python

- name: install python
  raw: which yum || which python || yum -y update && yum install -y python python-devel

- name: Update jenkins user
  user:
    name: jenkins
    home: /home/jenkins
    state: present
    password: $6$9WIT0iLEtXn0y$R4iU5cWmEyFPoCZJMkyrrilXBZr4WxPgWqDBOwlRQ7rYovTIFvLHbuipOrXr6hTyASKl57YG6Pj0gwrUCR2/H.
- name: add keys to the authorized keys
  authorized_key:
    user: root
    key: https://github.com/{{ item }}.keys
    validate_certs: False
  with_items:
    - brucellino
    - jenkinssagrid

- name: install sshd
  package:
    name: openssh-server
    state: present
- name: generate host keys
  command: "ssh-keygen -f /etc/ssh/ssh_host_{{item }}_key -N '' -t {{ item }}"
  args:
    creates: "/etc/ssh/ssh_host_{{item }}_key"
  with_items:
    - rsa
    - dsa
    - ecdsa

- name: ensure run dir present
  file:
    dest: /var/run/sshd
    state: directory
    owner: root

- name: Replace the pam login
  lineinfile:
    dest: /etc/pam.d/sshd
    line: "session    optional     pam_loginuid.so"
    regexp: "session    required     pam_loginuid.so"
    state: present

- name: install prerequisites
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - make
    - git
    - environment-modules
    - wget
    - bzip2
    - vim
    - which
    - tree
    - java-1.8.0-openjdk.x86_64
    - perl-CPAN
    - libX11-devel
  when: ansible_os_family == "RedHat"
# See, now this just makes me upset. I have to put in this dirty workaround because
# there is a circular dependency on a frikkin perl module
# (need cpanm for Test::more, which needs cpanm to install)
- block:
    - name: Ensure that cpanm is available
      uri:
        url: https://cpanmin.us/
        dest: /bin/cpanm
        creates: /bin/cpanm
    - name: Ensure executable
      file:
        path: /bin/cpanm
        mode: "u+rwx"
  rescue:
    - debug:
        msg: "Ah, fuckit"

  when: ansible_os_family == "RedHat"

- name: Install Required Groups (RedHat)
  yum:
    name: "{{ item }}"
    state: present
  when: ansible_os_family == 'RedHat'
  with_items:
    - '@X Software Development'
    - '@Development tool'

- name: Install prerequisites (Debian)
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - gfortran
    - git
    - environment-modules
    - wget
    - bzip2
    - vim
    - default-jdk
    - tree
    - curl
    - m4
    - cpanminus
    - libx11-dev
    - zip
  when: "{{ ansible_os_family == 'Debian'}}"

- name: Ensure Testing packages are installed
  cpanm:
    name: Test::More

- name : Ensure Modulefile dir is present
  file:
    path: "{{ modules_path[ansible_os_family]}}"
    state: directory

- name: Template modules
  template:
    src: "templates/{{ item.path[ansible_os_family] }}/{{item.name }}.j2"
    dest: "/{{ item.path[ansible_os_family] }}/{{item.name}}"
  with_items: "{{ modules}}"

- name: Ensure module dirs in CODE-RADE are present
  file:
    path: "/data/modules/{{ item }}"
    state: directory
  with_items: module_domains

- name: Ensure module dirs in CVMFS are present
  file:
    path: "/cvmfs/code-rade.africa-grid.org/{{ item }}"
    state: directory
  with_items: module_domains
